{"version":3,"sources":["general.js","nav.js","registration.js"],"names":["addEvent","node","type","callback","addEventListener","e","target","attachEvent","srcElement","addClass","cl","classList","contains","add","removeClass","remove","select","name","document","querySelector","selectAll","querySelectorAll","toggleLabelValidity","label","valid","serialize","form","serialized","i","elements","length","field","disabled","n","options","selected","push","encodeURIComponent","value","checked","join","ready","fn","readyState","external_boxes","forEach","box","links","link","setAttribute","toggleNav","nav_container","toggle","lg_media","window","matchMedia","nav_items","nav_item"],"mappings":"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":"index.js","sourcesContent":["//add event construct for modern browsers or IE\n//which fires the callback with a pre-converted target reference\nfunction addEvent(node, type, callback) {\n  if (node.addEventListener) {\n    node.addEventListener(\n      type,\n      function(e) {\n        callback(e, e.target);\n      },\n      false\n    );\n  } else if (node.attachEvent) {\n    node.attachEvent(\"on\" + type, function(e) {\n      callback(e, e.srcElement);\n    });\n  }\n}\n\nfunction addClass(node, cl) {\n    if (!node.classList.contains(cl)) {\n        node.classList.add(cl);\n    }\n}\n\nfunction removeClass(node, cl) {\n    while (node.classList.contains(cl)) {\n        node.classList.remove(cl);\n    }\n}\n\nfunction select(name) {\n    return document.querySelector(name);\n}\n\nfunction selectAll(name) {\n    return document.querySelectorAll(name);\n}\n\nfunction toggleLabelValidity(label, valid) {\n    if (valid) {\n      removeClass(label, 'form-label-invalid');\n      addClass(label, 'form-label-valid');\n    } else {\n      addClass(label, 'form-label-invalid');\n      removeClass(label, 'form-label-valid');\n    }\n}\n\n/*!\n * Serialize all form data into a query string\n * (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com\n * @param  {Node} form   The form to serialize\n * @return {String}      The serialized form data\n */\nvar serialize = function (form) {\n\n    // Setup our serialized data\n    var serialized = [];\n\n    // Loop through each field in the form\n    for (var i = 0; i < form.elements.length; i++) {\n\n        var field = form.elements[i];\n\n        // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n        if (!field.name || field.disabled || field.type === 'file' || field.type === 'reset' || field.type === 'submit' || field.type === 'button') continue;\n\n        // If a multi-select, get all selections\n        if (field.type === 'select-multiple') {\n            for (var n = 0; n < field.options.length; n++) {\n                if (!field.options[n].selected) continue;\n                serialized.push(encodeURIComponent(field.name) + \"=\" + encodeURIComponent(field.options[n].value));\n            }\n        }\n\n        // Convert field data to a query string\n        else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {\n            serialized.push(encodeURIComponent(field.name) + \"=\" + encodeURIComponent(field.value));\n        }\n    }\n\n    return serialized.join('&');\n\n};\n\nfunction ready(fn) {\n\tif (document.readyState != 'loading'){\n\t\tfn();\n\t} else {\n\t\tdocument.addEventListener('DOMContentLoaded', fn);\n\t}\n}\n\nready(() => {\n  var external_boxes = selectAll('.external');\n  external_boxes.forEach((box) => {\n    var links = box.querySelectorAll('a');\n    links.forEach((link) => {\n      link.setAttribute('rel', 'noreferrer noopener');\n      link.setAttribute('target', '_blank');\n    });\n  });\n});\n","function toggleNav() {\n\tvar nav_container = select('#nav-collapsable');\n\tnav_container.classList.toggle('h-0');\n\tnav_container.classList.toggle('h-auto');\n}\n\nready(() => {\n\tvar lg_media = window.matchMedia('(min-width: 1024px)');\n\n\taddEvent(lg_media, 'change', (e) => {\n\t\tvar nav_container = select('#nav-collapsable');\n\t\tif (nav_container.classList.contains('h-auto')) {\n\t\t\tnav_container.classList.remove('h-auto');\n\t\t}\n\t\tnav_container.classList.add('h-0');\n\t});\n\n\t// var nav = select('#nav-overall');\n\t// nav.getBoundingClientRect().height\n\n\tvar nav_items = selectAll('.nav-item');\n\tnav_items.forEach((nav_item) => {\n\t\taddEvent(nav_item, 'click', (e) => {\n\t\t\tif (select('#nav-collapsable').classList.contains('h-auto')) {\n\t\t\t\ttoggleNav();\n\t\t\t}\n\t\t})\n\t});\n})\n","// ready(() => {\n//   // Deal with sending the form\n//   var form = select('#reg-form');\n//   var url = 'https://script.google.com/macros/s/' +\n//     'AKfycbwM0V59PxYwDteAqueZ9ZhP6_9fmAkMiNnxqqd8KYbpKXaxl3U/exec';\n\n//   // Observers should not submit an abstract\n//   var presentation_forms = selectAll(\n//     'input[type=radio][name=regInputPresentationForm]');\n//   presentation_forms.forEach((val) => {\n//     addEvent(val, 'change', (e) => {\n//       var ns = ['#regInputTitle', '#regInputAuthors',\n//                 '#regInputAffiliations', '#regInputAbstract'];\n//       if (e.currentTarget.value == 'Observer') {\n//         ns.forEach((n) => {\n//            select(n).setAttribute('disabled', '');\n//            select(n).removeAttribute('required');\n//            select(n + 'Group').style.display = 'none';\n//         });\n//       } else {\n//         ns.forEach((n) => {\n//           select(n).removeAttribute('disabled');\n//           select(n).setAttribute('required', '');\n//           select(n + 'Group').style.display = 'flex';\n//         });\n//       }\n//     })\n//   });\n\n//   // If participant type is 'other' then they should specify\n//   // what they do\n//   addEvent(select('#regInputParticipantType'), 'change', (e) => {\n//     var type_other = select('#regInputParticipantTypeOther');\n//     label = select('label[for=regInputParticipantType]');\n//     if (e.currentTarget.value === 'other') {\n//       type_other.style.display = 'block';\n//       type_other.setAttribute('required', '');\n//       if (type_other.checkValidity()) {\n//         removeClass(label, 'form-label-invalid');\n//         addClass(label, 'form-label-valid');\n//       }\n//     } else {\n//       type_other.style.display = 'none';\n//       type_other.removeAttribute('required');\n//       removeClass(label, 'form-label-invalid');\n//       addClass(label, 'form-label-valid');\n//     }\n//   });\n\n//   addEvent(select('#regInputParticipantTypeOther'), 'change', (e) => {\n//     var type = select('#regInputParticipantType');\n//     if (type.value === 'other') {\n//       label = select('label[for=regInputParticipantType]');\n//       toggleLabelValidity(label, e.currentTarget.checkValidity());\n//     }\n//   });\n\n//   formInputs = selectAll('input');\n//   formInputs.forEach((input) => {\n//     if (input.required) {\n//       if (input.type !== \"radio\") {\n//         addEvent(input, 'change', (e) => {\n//           name = e.currentTarget.id;\n//           label = select('label[for=' + name + ']');\n//           toggleLabelValidity(label, e.currentTarget.checkValidity());\n//         });\n//       }\n//     }\n//   });\n\n//   // Word Counter\n//   addEvent(select('#regInputAbstract'), 'input', (e) => {\n//     var word_count = 0;\n//     if (e.currentTarget.value.length) {\n//       var words = select('#regInputAbstract')\n//         .value.split(/\\s+/);\n//       while(words.indexOf('') > -1) { words.pop(); }\n//       var word_count = words.length;\n//     }\n//     select('#regInputAbstractWordCount').innerText =\n//       \"Word count: \" + word_count;\n\n//     if (word_count > 0 && word_count <= 300) {\n//       e.currentTarget.setCustomValidity('');\n//       form.checkValidity();\n//     } else {\n//       if (word_count == 0) {\n//         e.currentTarget.setCustomValidity('Abstract needs to be provided');\n//         form.checkValidity();\n//       } else {\n//         e.currentTarget.setCustomValidity('Abstract is too long');\n//         form.checkValidity();\n//       }\n//     }\n//   });\n\n//   addEvent(select('#submitForm'), 'click', (e) => {\n//     e.preventDefault();\n\n//     var ns = ['#regInputTitle', '#regInputAuthors',\n//               '#regInputAffiliations', '#regInputAbstract'];\n\n//     // Special checking for field abstract\n//     if (select('#regInputTalk').checked || select('#regInputPoster').checked) {\n//       ns.forEach((n) => { select(n).setAttribute('required', ''); });\n\n//       var word_count = 0;\n//       if (select('#regInputAbstract').value.length) {\n//         select('#regInputAbstract').value.split(/\\s+/).length;\n//       }\n//       if (word_count == 0) {\n//         // Empy abstract\n//         select('#regInputAbstract')\n//           .setCustomValidity('Abstract needs to be provided.');\n//         select('#regInputAbstractInvalidFeedback')\n//           .innerText = 'Abstract needs to be provided.';\n//       }\n//       if (word_count <= 300) {\n//         select('#regInputAbstract')\n//           .setCustomValidity('');\n//       } else {\n//         select('#regInputAbstract')\n//           .setCustomValidity('Abstract too long');\n//         select('#regInputAbstractInvalidFeedback')\n//           .innerText = 'Abstract too long';\n//       }\n//     } else {\n//       ns.forEach((n) => { select(n).removeAttribute('required'); });\n//     }\n\n//     // Activate checking of participant type 'other' text field\n//     // if participant type is 'other'\n//     if (select('#regInputParticipantType').value == 'other') {\n//       select('#regInputParticipantTypeOther')\n//         .setAttribute('required', '');\n//     } else {\n//       select('#regInputParticipantTypeOther')\n//         .removeAttribute('required');\n//     }\n\n//     // Do input checking before sending\n//     if (form.checkValidity() === false) {\n//       e.stopPropagation();\n//     } else {\n//       fetch(url, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(serialize(form))\n//       })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         select('#submit-form').setAttribute('disabled', '');\n//         select('#reg-output').innerText =\n//           'Registration successfully submitted';\n//         addClass(select('#reg-output'), 'text-success');\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       })\n//     }\n//   });\n// });\n"]}